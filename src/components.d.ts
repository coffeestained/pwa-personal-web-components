/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SpaButton {
        "buttonColoring": "primaryColor" | "secondaryColor";
        "buttonStyle": "primaryStyle" | "secondaryStyle";
        /**
          * The button callback
         */
        "callback": () => void;
        "icon": null | string;
        "text": string;
    }
    interface SpaLogo {
        /**
          * The logo src
         */
        "src": string;
    }
    interface SpaTextLogo {
        "container": "" | "square";
        /**
          * The logo style
         */
        "logostyle": "short" | "full";
    }
    interface SpaTooltip {
        /**
          * Tooltip background
         */
        "backgroundColor": string;
        /**
          * Tooltip alignment
         */
        "tooltipAlignment": string;
        /**
          * Tooltip position
         */
        "tooltipPosition"?: { top: number, left: number };
        /**
          * Tooltip state
         */
        "tooltipState": boolean;
        /**
          * Tooltip target
         */
        "tooltipTarget": string;
        /**
          * Tooltip content
         */
        "tooltipText": string;
    }
}
declare global {
    interface HTMLSpaButtonElement extends Components.SpaButton, HTMLStencilElement {
    }
    var HTMLSpaButtonElement: {
        prototype: HTMLSpaButtonElement;
        new (): HTMLSpaButtonElement;
    };
    interface HTMLSpaLogoElement extends Components.SpaLogo, HTMLStencilElement {
    }
    var HTMLSpaLogoElement: {
        prototype: HTMLSpaLogoElement;
        new (): HTMLSpaLogoElement;
    };
    interface HTMLSpaTextLogoElement extends Components.SpaTextLogo, HTMLStencilElement {
    }
    var HTMLSpaTextLogoElement: {
        prototype: HTMLSpaTextLogoElement;
        new (): HTMLSpaTextLogoElement;
    };
    interface HTMLSpaTooltipElement extends Components.SpaTooltip, HTMLStencilElement {
    }
    var HTMLSpaTooltipElement: {
        prototype: HTMLSpaTooltipElement;
        new (): HTMLSpaTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "spa-button": HTMLSpaButtonElement;
        "spa-logo": HTMLSpaLogoElement;
        "spa-text-logo": HTMLSpaTextLogoElement;
        "spa-tooltip": HTMLSpaTooltipElement;
    }
}
declare namespace LocalJSX {
    interface SpaButton {
        "buttonColoring"?: "primaryColor" | "secondaryColor";
        "buttonStyle"?: "primaryStyle" | "secondaryStyle";
        /**
          * The button callback
         */
        "callback"?: () => void;
        "icon"?: null | string;
        "text"?: string;
    }
    interface SpaLogo {
        /**
          * The logo src
         */
        "src"?: string;
    }
    interface SpaTextLogo {
        "container"?: "" | "square";
        /**
          * The logo style
         */
        "logostyle"?: "short" | "full";
    }
    interface SpaTooltip {
        /**
          * Tooltip background
         */
        "backgroundColor"?: string;
        /**
          * Tooltip alignment
         */
        "tooltipAlignment"?: string;
        /**
          * Tooltip position
         */
        "tooltipPosition"?: { top: number, left: number };
        /**
          * Tooltip state
         */
        "tooltipState"?: boolean;
        /**
          * Tooltip target
         */
        "tooltipTarget"?: string;
        /**
          * Tooltip content
         */
        "tooltipText"?: string;
    }
    interface IntrinsicElements {
        "spa-button": SpaButton;
        "spa-logo": SpaLogo;
        "spa-text-logo": SpaTextLogo;
        "spa-tooltip": SpaTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "spa-button": LocalJSX.SpaButton & JSXBase.HTMLAttributes<HTMLSpaButtonElement>;
            "spa-logo": LocalJSX.SpaLogo & JSXBase.HTMLAttributes<HTMLSpaLogoElement>;
            "spa-text-logo": LocalJSX.SpaTextLogo & JSXBase.HTMLAttributes<HTMLSpaTextLogoElement>;
            "spa-tooltip": LocalJSX.SpaTooltip & JSXBase.HTMLAttributes<HTMLSpaTooltipElement>;
        }
    }
}
